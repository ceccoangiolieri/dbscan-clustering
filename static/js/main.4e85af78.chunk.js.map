{"version":3,"sources":["actions/actions.js","reducers/index.js","Map/utils.js","Map/hereTileLayers.js","Map/Map.jsx","Controls/Control.jsx","App.jsx","index.js"],"names":["fetchHerePlaces","payload","dispatch","getState","url","params","currentPlacesControls","placesControls","boundingbox","places","hasOwnProperty","category","next","URL","app_id","app_code","in","size","cat","requestPlacesResults","search","URLSearchParams","fetch","then","response","json","data","processPlacesResponse","color","catch","error","console","sendMessage","message","type","clear","doUpdateBoundingBox","bbox","_southWest","lng","lat","_northEast","join","updateBoundingBox","computeDbScan","results","jsonToParse","items","length","icon","description","title","parsePlacesResponse","receivePlacesResults","initialPlacesState","receivedAt","lastCall","Date","now","dbscanSettings","minPoints","maxDistance","lastCompute","rootReducer","combineReducers","state","arguments","undefined","action","Object","objectSpread","defineProperty","disabled","isFetching","concat","toConsumableArray","previous","newState","obj","setting","value","prepareGeojson","geojson","clusterSize","clusterObj","L","geoJSON","pointToLayer","feature","latlng","properties","circleMarker","style","radius","fillColor","weight","opacity","pane","fillOpacity","bindTooltip","isNaN","parseInt","permanent","sticky","HereTileLayers","HERE","extend","options","subdomains","minZoom","maxZoom","scheme","resource","mapId","format","appId","appCode","initialize","schemeStart","this","split","tileResolution","retina","tileServer","indexOf","tileUrl","_attributionUrl","template","prototype","call","_attributionText","onAdd","map","_attributionBBoxes","_fetchAttributionBBoxes","onRemove","_map","attributionControl","removeAttribution","off","_findCopyrightBBox","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","_parseAttributionBBoxes","JSON","parse","responseText","open","send","providers","normal","i","boxes","j","box","on","_attributionProviders","visibleProviders","zoom","getZoom","visibleBounds","getBounds","minLevel","maxLevel","push","overlaps","attributions","provider","alt","label","attributionText","addAttribution","here","opts","width","height","hereReducedDay","placesLayer","featureGroup","clusterLayer","mapParams","center","zoomControl","maxBounds","latLngBounds","latLng","layers","Map","_this","props","createPane","baseMaps","HERE Maps Tiles: reduced day","overlayMaps","Points of interest","Clusters","control","addTo","position","brand","div","DomUtil","create","innerHTML","hereLogo","addControl","clusterData","clustersNoiseEdges","clusters","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","features","Symbol","iterator","done","dbscan","geometry","coordinates","cluster","point","err","return","makeClusterObjects","multiPoint","featureCollection","polygon","concave","prevProps","_this$props","addPlaces","clearLayers","pointsGeojson","clustersDbscan","toGeoJSON","processClusters","cnt","place","placeObj","orig_color","id","react_default","a","createElement","React","Component","connect","_state$placesControls","segmentStyle","zIndex","top","left","maxHeight","overflow","padding","herePlaces","0","name","1","2","3","4","5","6","7","8","9","10","11","12","13","14","16","17","CustomSlider","_ref","min","max","step","start","build","discrete","settings","onChange","val","CustomLabel","_ref2","content","Popup","trigger","Label","Control","handleClick","event","handleClickDbscan","handleClickClear","componentDidUpdate","toast","topic","time","areButtonsDisabled","buttonsDisabled","key","_this2","CustomButton","_ref3","circular","popupContent","handler","basic","loading","Button","onClick","Segment","Header","as","href","rel","target","className","Control_CustomSlider","Control_CustomLabel","Divider","keys","index","react_semantic_toasts_build","App","src_Map_Map","Controls_Control","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","apply","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4e85af78.chunk.js","sourcesContent":["const hereAppCode = '0XXQyxbiCjVU7jN2URXuhg'\nconst hereAppId = 'yATlKFDZwdLtjHzyTeCK'\n\nexport const RECEIVE_PLACES_RESULTS = 'RECEIVE_PLACES_RESULTS'\nexport const REQUEST_PLACES_RESULTS = 'REQUEST_PLACES_RESULTS'\nexport const UPDATE_BBOX = 'UPDATE_BBOX'\nexport const UPDATE_DBSCAN_SETTINGS = 'UPDATE_DBSCAN_SETTINGS'\nexport const COMPUTE_DBSCAN = 'COMPUTE_DBSCAN'\nexport const RESULT_HANDLER = 'RESULT_HANDLER'\nexport const CLEAR = 'CLEAR'\nexport const DISABLE_PLACES = 'DISABLE_PLACES'\n\nexport const fetchHerePlaces = payload => (dispatch, getState) => {\n  const currentPlacesControls = getState().placesControls\n  const { boundingbox } = currentPlacesControls\n\n  let url\n  let params\n\n  if (\n    currentPlacesControls.places.hasOwnProperty(payload.category) &&\n    boundingbox == currentPlacesControls.places[payload.category].boundingbox &&\n    currentPlacesControls.places[payload.category].next\n  ) {\n    url = currentPlacesControls.places[payload.category].next\n  } else {\n    url = new URL('https://places.cit.api.here.com/places/v1/discover/explore')\n    params = {\n      app_id: hereAppId,\n      app_code: hereAppCode,\n      //west longitude, south latitude, east longitude, north latitude.\n      in: boundingbox,\n      size: 20,\n      cat: payload.category\n    }\n  }\n\n  if (url) {\n    dispatch(requestPlacesResults({ category: payload.category }))\n\n    if (params) url.search = new URLSearchParams(params)\n    return fetch(url)\n      .then(response => response.json())\n      .then(data =>\n        dispatch(\n          processPlacesResponse(\n            data,\n            payload.category,\n            boundingbox,\n            payload.color\n          )\n        )\n      )\n      .catch(error => console.error(error)) //eslint-disable-line\n  }\n}\n\nexport const sendMessage = message => ({\n  type: RESULT_HANDLER,\n  payload: message\n})\n\nexport const clear = () => ({\n  type: CLEAR\n})\n\nexport const doUpdateBoundingBox = boundingbox => dispatch => {\n  const bbox = [\n    boundingbox._southWest.lng,\n    boundingbox._southWest.lat,\n    boundingbox._northEast.lng,\n    boundingbox._northEast.lat\n  ].join(',')\n\n  dispatch(updateBoundingBox(bbox))\n}\n\nexport const disablePlaces = category => ({\n  type: DISABLE_PLACES,\n  payload: category\n})\n\nconst updateBoundingBox = bbox => ({\n  type: UPDATE_BBOX,\n  payload: bbox\n})\n\nexport const computeDbScan = () => ({\n  type: COMPUTE_DBSCAN\n})\n\nexport const updateDbScanSettings = settings => ({\n  type: UPDATE_DBSCAN_SETTINGS,\n  payload: { ...settings }\n})\n\nconst parsePlacesResponse = json => dispatch => {\n  const results = {}\n  let jsonToParse\n  if (json.results) {\n    jsonToParse = json.results\n  } else {\n    jsonToParse = json\n  }\n\n  if (jsonToParse.items.length > 0) {\n    results.items = jsonToParse.items\n  }\n  if (jsonToParse.next) {\n    results.next = jsonToParse.next\n  } else {\n    dispatch(\n      sendMessage({\n        type: 'warning',\n        icon: 'warning',\n        description:\n          'All places fetched in this bounding box. Try and zoom in or pan the map.',\n        title: 'No more places to fetch.'\n      })\n    )\n  }\n\n  return results\n}\n\nconst processPlacesResponse = (json, category, bbox, color) => dispatch => {\n  const results = dispatch(parsePlacesResponse(json))\n\n  dispatch(\n    receivePlacesResults({\n      data: results,\n      category: category,\n      boundingbox: bbox,\n      color: color\n    })\n  )\n  if (results.length == 0) {\n    dispatch(\n      sendMessage({\n        type: 'warning',\n        icon: 'warning',\n        description:\n          'No places in your viewport, zoom to another region and try again.',\n        title: 'DBScan settings'\n      })\n    )\n  }\n}\n\nexport const receivePlacesResults = places => ({\n  type: RECEIVE_PLACES_RESULTS,\n  payload: places\n})\n\nexport const requestPlacesResults = category => ({\n  type: REQUEST_PLACES_RESULTS,\n  payload: category\n})\n","import { combineReducers } from 'redux'\nimport {\n  REQUEST_PLACES_RESULTS,\n  RECEIVE_PLACES_RESULTS,\n  UPDATE_BBOX,\n  UPDATE_DBSCAN_SETTINGS,\n  COMPUTE_DBSCAN,\n  RESULT_HANDLER,\n  CLEAR,\n  DISABLE_PLACES\n} from '../actions/actions'\n\nconst initialPlacesState = {\n  boundingbox: '',\n  message: { receivedAt: 0 },\n  lastCall: Date.now(),\n  places: {},\n  dbscanSettings: {\n    minPoints: 10,\n    maxDistance: 500\n  },\n  lastCompute: 0\n}\n\nconst placesControls = (state = initialPlacesState, action) => {\n  switch (action.type) {\n    case DISABLE_PLACES: {\n      return {\n        ...state,\n        places: {\n          ...state.places,\n          [action.payload]: {\n            ...state.places[action.payload],\n            disabled: true\n          }\n        }\n      }\n    }\n    case CLEAR: {\n      return {\n        ...state,\n        places: {},\n        lastCall: Date.now(),\n        lastCompute: Date.now()\n      }\n    }\n    case REQUEST_PLACES_RESULTS: {\n      return {\n        ...state,\n        places: {\n          ...state.places,\n          [action.payload.category]: {\n            ...state.places[action.payload.category],\n            isFetching: true\n          }\n        }\n      }\n    }\n\n    case RECEIVE_PLACES_RESULTS: {\n      return {\n        ...state,\n        lastCall: Date.now(),\n        places: {\n          ...state.places,\n          [action.payload.category]: {\n            ...state.places[action.payload.category],\n            data: state.places[action.payload.category].hasOwnProperty('data')\n              ? [\n                  ...state.places[action.payload.category].data,\n                  ...action.payload.data.items\n                ]\n              : action.payload.data.items,\n            next: action.payload.data.next,\n            previous: action.payload.data.previous,\n            boundingbox: action.payload.boundingbox,\n            color: action.payload.color,\n            isFetching: false,\n            disabled: !action.payload.data.next\n          }\n        }\n      }\n    }\n    case UPDATE_BBOX: {\n      const newState = { ...state }\n      newState.boundingbox = action.payload\n      for (const obj in newState.places) {\n        newState.places[obj].disabled = false\n        newState.places[obj].next = undefined\n        newState.places[obj].previous = undefined\n      }\n\n      return newState\n    }\n    case RESULT_HANDLER: {\n      return {\n        ...state,\n        message: {\n          ...state.message,\n          ...action.payload,\n          receivedAt: Date.now()\n        }\n      }\n    }\n    case COMPUTE_DBSCAN: {\n      return {\n        ...state,\n        lastCompute: Date.now()\n      }\n    }\n    case UPDATE_DBSCAN_SETTINGS: {\n      return {\n        ...state,\n        dbscanSettings: {\n          ...state.dbscanSettings,\n          [action.payload.setting]: action.payload.value\n        }\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nconst rootReducer = combineReducers({\n  placesControls\n})\n\nexport default rootReducer\n","import { clustersDbscan, point } from '@turf/turf'\nimport L from 'leaflet'\n\nexport const computeDbScan = (pointsGeojson, dbscanSettings) => {\n  const maxDistance = dbscanSettings.maxDistance / 1000\n  const minPoints = dbscanSettings.minPoints\n  const clustered = clustersDbscan(pointsGeojson, maxDistance, {\n    minPoints: minPoints\n  })\n\n  return clustered\n}\n\nexport const makeClusterObjects = data => {\n  const clusters = {}\n\n  for (const feature of data.features) {\n    if (\n      feature.properties.dbscan === 'noise' ||\n      feature.properties.dbscan === 'edge'\n    ) {\n      if (clusters.hasOwnProperty(feature.properties.dbscan)) {\n        clusters[feature.properties.dbscan].push(feature.geometry.coordinates)\n      } else {\n        clusters[feature.properties.dbscan] = []\n      }\n    } else if (feature.properties.dbscan === 'core') {\n      if (clusters.hasOwnProperty(feature.properties.cluster)) {\n        clusters[feature.properties.cluster].push(\n          point(feature.geometry.coordinates)\n        )\n      } else {\n        clusters[feature.properties.cluster] = []\n      }\n    }\n  }\n\n  return clusters\n}\n\nexport const prepareGeojson = (geojson, clusterSize, clusterObj) => {\n  return L.geoJSON(geojson, {\n    pointToLayer: (feature, latlng) => {\n      switch (feature.properties.type) {\n        case 'edge':\n        case 'noise':\n          return L.circleMarker(latlng)\n      }\n    },\n    style: feature => {\n      switch (feature.properties.type) {\n        case 'cluster':\n          return {\n            radius: 8,\n            fillColor: 'black',\n            weight: 0,\n            opacity: 1,\n            color: 'black',\n            pane: 'clusterPane'\n          }\n        case 'noise':\n          return {\n            radius: 8,\n            fillColor: 'black',\n            color: 'black',\n            weight: 0,\n            opacity: 1,\n            fillOpacity: 0.3\n          }\n        case 'edge':\n          return {\n            radius: 8,\n            fillColor: 'blue',\n            color: 'blue',\n            weight: 0,\n            opacity: 1,\n            fillOpacity: 0.3\n          }\n      }\n    }\n  }).bindTooltip(\n    '<strong>DBScan information:</strong> ' +\n      (!isNaN(clusterObj)\n        ? 'Cluster ' + (parseInt(clusterObj) + 1)\n        : clusterObj) +\n      (!isNaN(clusterObj)\n        ? '<br/> ' +\n          '<strong>Amount of points in cluster:</strong> ' +\n          clusterSize\n        : ''),\n    {\n      permanent: false,\n      sticky: true\n    }\n  )\n  //.openTooltip()\n}\n","import * as L from 'leaflet'\n\nconst HereTileLayers = {}\n\n// 🍂class TileLayer.HERE\n// Tile layer for HERE maps tiles.\nHereTileLayers.HERE = L.TileLayer.extend({\n  options: {\n    subdomains: '1234',\n    minZoom: 2,\n    maxZoom: 18,\n\n    // 🍂option scheme: String = 'normal.day'\n    // The \"map scheme\", as documented in the HERE API.\n    scheme: 'normal.day',\n\n    // 🍂option resource: String = 'maptile'\n    // The \"map resource\", as documented in the HERE API.\n    resource: 'maptile',\n\n    // 🍂option mapId: String = 'newest'\n    // Version of the map tiles to be used, or a hash of an unique map\n    mapId: 'newest',\n\n    // 🍂option format: String = 'png8'\n    // Image format to be used (`png8`, `png`, or `jpg`)\n    format: 'png8',\n\n    // 🍂option appId: String = ''\n    // Required option. The `app_id` provided as part of the HERE credentials\n    appId: '',\n\n    // 🍂option appCode: String = ''\n    // Required option. The `app_code` provided as part of the HERE credentials\n    appCode: ''\n  },\n\n  initialize: function initialize(options) {\n    options = L.setOptions(this, options)\n\n    // Decide if this scheme uses the aerial servers or the basemap servers\n    const schemeStart = options.scheme.split('.')[0]\n    options.tileResolution = 256\n\n    if (L.Browser.retina) {\n      options.tileResolution = 512\n    }\n\n    //    {Base URL}{Path}/{resource (tile type)}/{map id}/{scheme}/{zoom}/{column}/{row}/{size}/{format}\n    //    ?app_id={YOUR_APP_ID}\n    //    &app_code={YOUR_APP_CODE}\n    //    &{param}={value}\n\n    const path =\n      '/{resource}/2.1/{resource}/{mapId}/{scheme}/{z}/{x}/{y}/{tileResolution}/{format}?app_id={appId}&app_code={appCode}'\n    const attributionPath =\n      '/maptile/2.1/copyright/{mapId}?app_id={appId}&app_code={appCode}'\n\n    let tileServer = 'base.maps.api.here.com'\n    if (\n      // eslint-disable-next-line\n      schemeStart == 'satellite' ||\n      // eslint-disable-next-line\n      schemeStart == 'terrain' ||\n      // eslint-disable-next-line\n      schemeStart == 'hybrid'\n    ) {\n      tileServer = 'aerial.maps.api.here.com'\n    }\n    if (options.scheme.indexOf('.traffic.') !== -1) {\n      tileServer = 'traffic.maps.api.here.com'\n    }\n\n    const tileUrl = 'https://{s}.' + tileServer + path\n\n    this._attributionUrl = L.Util.template(\n      'https://1.' + tileServer + attributionPath,\n      this.options\n    )\n\n    L.TileLayer.prototype.initialize.call(this, tileUrl, options)\n\n    this._attributionText = ''\n  },\n\n  onAdd: function onAdd(map) {\n    L.TileLayer.prototype.onAdd.call(this, map)\n\n    if (!this._attributionBBoxes) {\n      this._fetchAttributionBBoxes()\n    }\n  },\n\n  onRemove: function onRemove(map) {\n    L.TileLayer.prototype.onRemove.call(this, map)\n\n    this._map.attributionControl.removeAttribution(this._attributionText)\n\n    this._map.off('moveend zoomend resetview', this._findCopyrightBBox, this)\n  },\n\n  _fetchAttributionBBoxes: function _onMapMove() {\n    const xmlhttp = new XMLHttpRequest()\n    xmlhttp.onreadystatechange = L.bind(function() {\n      // eslint-disable-next-line\n      if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n        this._parseAttributionBBoxes(JSON.parse(xmlhttp.responseText))\n      }\n    }, this)\n    xmlhttp.open('GET', this._attributionUrl, true)\n    xmlhttp.send()\n  },\n\n  _parseAttributionBBoxes: function _parseAttributionBBoxes(json) {\n    if (!this._map) {\n      return\n    }\n    const providers = json[this.options.scheme.split('.')[0]] || json.normal\n    for (let i = 0; i < providers.length; i++) {\n      if (providers[i].boxes) {\n        for (let j = 0; j < providers[i].boxes.length; j++) {\n          const box = providers[i].boxes[j]\n          providers[i].boxes[j] = L.latLngBounds([\n            [box[0], box[1]],\n            [box[2], box[3]]\n          ])\n        }\n      }\n    }\n\n    this._map.on('moveend zoomend resetview', this._findCopyrightBBox, this)\n\n    this._attributionProviders = providers\n\n    this._findCopyrightBBox()\n  },\n\n  _findCopyrightBBox: function _findCopyrightBBox() {\n    if (!this._map) {\n      return\n    }\n    const providers = this._attributionProviders\n    const visibleProviders = []\n    const zoom = this._map.getZoom()\n    const visibleBounds = this._map.getBounds()\n\n    for (let i = 0; i < providers.length; i++) {\n      if (providers[i].minLevel < zoom && providers[i].maxLevel > zoom) {\n        if (!providers[i].boxes) {\n          // No boxes = attribution always visible\n          visibleProviders.push(providers[i])\n          break\n        }\n      }\n\n      for (let j = 0; j < providers[i].boxes.length; j++) {\n        const box = providers[i].boxes[j]\n        if (visibleBounds.overlaps(box)) {\n          visibleProviders.push(providers[i])\n          break\n        }\n      }\n    }\n\n    const attributions = [\n      '<a href=\"https://legal.here.com/terms/serviceterms/gb/\">HERE maps</a>'\n    ]\n    // eslint-disable-next-line\n    for (let i = 0; i < visibleProviders.length; i++) {\n      const provider = visibleProviders[i]\n      attributions.push(\n        '<abbr title=\"' + provider.alt + '\">' + provider.label + '</abbr>'\n      )\n    }\n\n    const attributionText = '© ' + attributions.join(', ') + '. '\n\n    if (attributionText !== this._attributionText) {\n      this._map.attributionControl.removeAttribution(this._attributionText)\n      this._map.attributionControl.addAttribution(\n        (this._attributionText = attributionText)\n      )\n    }\n  }\n})\n\nHereTileLayers.here = function(opts) {\n  return new HereTileLayers.HERE(opts)\n}\n\nexport default HereTileLayers\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport L from 'leaflet'\nimport PropTypes from 'prop-types'\nimport { concave, polygon, multiPoint, featureCollection } from '@turf/turf'\nimport { doUpdateBoundingBox } from '../actions/actions'\nimport { makeClusterObjects, computeDbScan, prepareGeojson } from './utils'\nimport HereTileLayers from './hereTileLayers'\n\n// defining the container styles the map sits in\nconst style = {\n  width: '100%',\n  height: '100vh'\n}\n\n// using the reduced.day map styles, have a look at the imported hereTileLayers for more\nconst hereReducedDay = HereTileLayers.here({\n  appId: 'jKco7gLGf0WWlvS5n2fl',\n  appCode: 'HQnCztY23zh2xiTPCFiTMA',\n  scheme: 'reduced.day'\n})\n\n// for this app we create two leaflet layer groups to control, one for the isochrone centers and one for the isochrone contours\nconst placesLayer = L.featureGroup()\nconst clusterLayer = L.featureGroup()\n\n// a leaflet map consumes parameters, I'd say they are quite self-explanatory\nconst mapParams = {\n  center: [40.7569, -73.9837],\n  zoomControl: false,\n  maxBounds: L.latLngBounds(L.latLng(-90, -180), L.latLng(90, 180)),\n  zoom: 13,\n  layers: [placesLayer, clusterLayer, hereReducedDay]\n}\n\n// this you have seen before, we define a react component\nclass Map extends React.Component {\n  static propTypes = {\n    lastCall: PropTypes.number,\n    lastCompute: PropTypes.number,\n    dbscanSettings: PropTypes.object,\n    dispatch: PropTypes.func.isRequired,\n    places: PropTypes.object\n  }\n\n  // and once the component has mounted we add everything to it\n  componentDidMount() {\n    // our map!\n    const { dispatch } = this.props\n\n    this.map = L.map('map', mapParams)\n\n    // we create a leaflet pane which will hold all isochrone polygons with a given opacity\n    const clusterPane = this.map.createPane('clusterPane')\n    clusterPane.style.opacity = 0.9\n\n    // our basemap and add it to the map\n    const baseMaps = {\n      'HERE Maps Tiles: reduced day': hereReducedDay\n    }\n\n    const overlayMaps = {\n      'Points of interest': placesLayer,\n      Clusters: clusterLayer\n    }\n\n    L.control.layers(baseMaps, overlayMaps).addTo(this.map)\n\n    // we do want a zoom control\n    L.control\n      .zoom({\n        position: 'topright'\n      })\n      .addTo(this.map)\n\n    //and for the sake of advertising your company, you may add a logo to the map\n    const brand = L.control({\n      position: 'bottomright'\n    })\n    brand.onAdd = function(map) {\n      const div = L.DomUtil.create('div', 'brand')\n      div.innerHTML =\n        '<a href=\"https://gis.ops.com\" target=\"_blank\"><div class=\"gis-ops-logo\"></a>'\n      return div\n    }\n    const hereLogo = L.control({\n      position: 'bottomright'\n    })\n    hereLogo.onAdd = function(map) {\n      const div = L.DomUtil.create('div', 'brand')\n      div.innerHTML =\n        '<a href=\"https://developer.here.com/\" target=\"_blank\"><div class=\"here-logo\"></div></a>'\n      return div\n    }\n    this.map.addControl(brand)\n    this.map.addControl(hereLogo)\n\n    this.map.on('moveend', () => {\n      dispatch(doUpdateBoundingBox(this.map.getBounds()))\n    })\n\n    dispatch(doUpdateBoundingBox(this.map.getBounds()))\n  }\n\n  processClusters(clusterData) {\n    const clustersNoiseEdges = makeClusterObjects(clusterData)\n\n    for (const clusterObj in clustersNoiseEdges) {\n      const clusterSize = clustersNoiseEdges[clusterObj].length\n      let geojson\n      if (clusterObj !== 'noise' && clusterObj !== 'edge') {\n        switch (true) {\n          case clusterSize <= 2: {\n            geojson = multiPoint(\n              featureCollection(clustersNoiseEdges[clusterObj]),\n              {\n                type: 'cluster'\n              }\n            )\n            break\n          }\n\n          case clusterSize == 3: {\n            geojson = polygon(\n              featureCollection(clustersNoiseEdges[clusterObj]),\n              {\n                type: 'cluster'\n              }\n            )\n            break\n          }\n\n          case clusterSize > 3: {\n            geojson = concave(featureCollection(clustersNoiseEdges[clusterObj]))\n            geojson.properties.type = 'cluster'\n\n            break\n          }\n        }\n      } else {\n        geojson = multiPoint(clustersNoiseEdges[clusterObj], {\n          type: clusterObj\n        })\n      }\n\n      prepareGeojson(geojson, clusterSize, clusterObj).addTo(clusterLayer)\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { lastCall, lastCompute, dbscanSettings } = this.props\n    if (lastCall > prevProps.lastCall) {\n      this.addPlaces()\n    }\n\n    if (lastCompute > prevProps.lastCompute) {\n      clusterLayer.clearLayers()\n      const clusters = computeDbScan(placesLayer.toGeoJSON(), dbscanSettings)\n      this.processClusters(clusters)\n    }\n  }\n\n  addPlaces() {\n    placesLayer.clearLayers()\n\n    const { places } = this.props\n    let cnt = 0\n    for (const place in places) {\n      if (\n        places[place].hasOwnProperty('data') &&\n        places[place].data.length > 0\n      ) {\n        for (const placeObj of places[place].data) {\n          L.circleMarker([placeObj.position[0], placeObj.position[1]], {\n            color: places[place].color,\n            orig_color: places[place].color,\n            radius: 5,\n            id: cnt,\n            weight: 1,\n            opacity: 0.5\n          })\n            .addTo(placesLayer)\n            .bindTooltip(placeObj.title)\n          cnt += 1\n        }\n      }\n    }\n  }\n\n  render() {\n    return <div id=\"map\" style={style} />\n  }\n}\n\nconst mapStateToProps = state => {\n  const { places, lastCall, lastCompute, dbscanSettings } = state.placesControls\n  return {\n    places,\n    lastCall,\n    lastCompute,\n    dbscanSettings\n  }\n}\n\nexport default connect(mapStateToProps)(Map)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Slider } from 'react-semantic-ui-range'\nimport { SemanticToastContainer, toast } from 'react-semantic-toasts'\n\nimport {\n  Segment,\n  Divider,\n  Button,\n  Header,\n  Label,\n  Popup\n} from 'semantic-ui-react'\n\nimport {\n  fetchHerePlaces,\n  updateDbScanSettings,\n  computeDbScan,\n  clear\n} from '../actions/actions'\n\nconst segmentStyle = {\n  zIndex: 999,\n  position: 'absolute',\n  width: '400px',\n  top: '10px',\n  left: '10px',\n  maxHeight: 'calc(100vh - 3vw)',\n  overflow: 'auto',\n  padding: '20px'\n}\n\nconst herePlaces = {\n  0: { name: 'shopping', color: 'red' },\n  1: { name: 'accommodation', color: 'orange' },\n  2: { name: 'administrative-areas-buildings', color: 'yellow' },\n  3: { name: 'airport', color: 'olive' },\n  4: { name: 'atm-bank-exchange', color: 'green' },\n  5: { name: 'coffee-tea', color: 'teal' },\n  6: { name: 'eat-drink', color: 'blue' },\n  7: { name: 'going-out', color: 'violet' },\n  8: { name: 'hospital-health-care-facility', color: 'purple' },\n  9: { name: 'leisure-outdoor', color: 'pink' },\n  10: { name: 'natural-geographical', color: 'brown' },\n  11: { name: 'petrol-station' },\n  12: { name: 'restaurant', color: 'grey' },\n  13: { name: 'snacks-fast-food', color: 'black' },\n  14: { name: 'sights-museums', color: 'red' },\n  16: { name: 'toilet-rest-area', color: 'yellow' },\n  17: { name: 'transport', color: 'olive' }\n}\n\nconst CustomSlider = ({ name, min, max, step, start, value, dispatch }) => (\n  <Slider\n    discrete\n    color=\"grey\"\n    settings={{\n      start: start,\n      value: value,\n      min: min,\n      max: max,\n      step: step,\n      onChange: val => {\n        dispatch(\n          updateDbScanSettings({\n            setting: name,\n            value: val\n          })\n        )\n      }\n    }}\n  />\n)\nCustomSlider.propTypes = {\n  name: PropTypes.string,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  step: PropTypes.number,\n  start: PropTypes.number,\n  value: PropTypes.number,\n  dispatch: PropTypes.func\n}\n\nconst CustomLabel = ({ content, value }) => (\n  <Popup content={content} trigger={<Label size=\"tiny\">{value}</Label>} />\n)\nCustomLabel.propTypes = {\n  content: PropTypes.string,\n  value: PropTypes.string\n}\n\nclass Control extends React.Component {\n  static propTypes = {\n    places: PropTypes.object,\n    dbscanSettings: PropTypes.object,\n    boundingbox: PropTypes.string,\n    dispatch: PropTypes.func.isRequired,\n    message: PropTypes.object\n  }\n\n  handleClick = (event, data) => {\n    const { dispatch } = this.props\n    dispatch(fetchHerePlaces({ category: data.name, color: data.color }))\n  }\n\n  handleClickDbscan = () => {\n    const { dispatch } = this.props\n    dispatch(computeDbScan())\n  }\n\n  handleClickClear = () => {\n    const { dispatch } = this.props\n    dispatch(clear())\n  }\n  componentDidUpdate = prevProps => {\n    const { message } = this.props\n\n    if (message.receivedAt > prevProps.message.receivedAt) {\n      toast({\n        type: message.type,\n        icon: message.icon,\n        title: message.topic,\n        description: message.description,\n        time: 5000\n      })\n    }\n  }\n\n  areButtonsDisabled = places => {\n    let buttonsDisabled = true\n    for (const key in places) {\n      if (places.hasOwnProperty(key)) {\n        if (places[key].hasOwnProperty('data') && places[key].data.length > 0) {\n          buttonsDisabled = false\n        }\n      }\n    }\n\n    return buttonsDisabled\n  }\n\n  render() {\n    const { places, dbscanSettings, dispatch } = this.props\n    const CustomButton = ({\n      content,\n      circular,\n      popupContent,\n      handler,\n      name,\n      icon,\n      value,\n      disabled,\n      basic,\n      size,\n      loading,\n      color\n    }) => (\n      <Popup\n        content={popupContent}\n        size={size}\n        trigger={\n          <Button\n            color={color}\n            circular={circular}\n            content={content}\n            loading={loading}\n            name={name}\n            size={size}\n            onClick={handler}\n            basic={basic}\n            disabled={disabled}\n            icon={icon}\n          />\n        }\n      />\n    )\n\n    return (\n      <div>\n        <Segment style={segmentStyle}>\n          <div>\n            <span>\n              <Header as=\"h4\">DBScan with HERE Maps places and TurfJS</Header>\n              <p>\n                Density-based spatial clustering of applications with noise (\n                <a\n                  href=\"https://en.wikipedia.org/wiki/DBSCAN\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\">\n                  DBScan\n                </a>\n                ) is a data clustering algorithm. Given a set of points in some\n                space, it groups together points that are closely packed\n                together (points with many nearby neighbors), marking as\n                outliers points that lie alone in low-density regions (whose\n                nearest neighbors are too far away).\n              </p>\n              <p>\n                This application consumes{' '}\n                <a\n                  href=\"https://developer.here.com/api-explorer/rest/places\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\">\n                  HERE Maps places API\n                </a>{' '}\n                for given categories as point input for the clustering algorithm\n                which is implemented in\n                <a\n                  href=\"https://turfjs.org/docs/#clustersDbscan\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\">\n                  TurfJS\n                </a>\n                .\n              </p>\n            </span>\n          </div>\n          <Header as=\"h5\">DBScan settings</Header>\n          <div className=\"flex flex-row\">\n            <div className=\"w-80\">\n              <CustomSlider\n                name={'maxDistance'}\n                min={100}\n                max={5000}\n                step={50}\n                start={dbscanSettings.maxDistance}\n                value={dbscanSettings.maxDistance}\n                dispatch={dispatch}\n              />\n              <div className=\"mt2\">\n                <CustomLabel\n                  value={'Max. distance: ' + dbscanSettings.maxDistance}\n                  content={\n                    'Maximum Distance ε between any point of the cluster to generate the clusters'\n                  }\n                />\n              </div>\n            </div>\n            <div className=\"w-80\">\n              <CustomSlider\n                name={'minPoints'}\n                min={3}\n                max={50}\n                step={1}\n                start={dbscanSettings.minPoints}\n                value={dbscanSettings.minPoints}\n                dispatch={dispatch}\n              />\n\n              <div className=\"mt2\">\n                <CustomLabel\n                  value={'Min. points: ' + dbscanSettings.minPoints}\n                  content={\n                    \"Minimum number of points to generate a single cluster, points which do not meet this requirement will be classified as an 'edge' or 'noise'.\"\n                  }\n                />\n              </div>\n            </div>\n            <div className=\"w-20\">\n              <CustomButton\n                basic={true}\n                size={'tiny'}\n                icon={'whmcs'}\n                circular={true}\n                popupContent={'Compute DBScan'}\n                disabled={this.areButtonsDisabled(places)}\n                handler={this.handleClickDbscan}\n              />\n            </div>\n          </div>\n          <Divider />\n          <div>\n            {Object.keys(herePlaces).map((key, index) => {\n              let content = herePlaces[key].name\n              if (places[herePlaces[key].name]) {\n                if (\n                  !places[herePlaces[key].name].disabled &&\n                  places[herePlaces[key].name].next\n                ) {\n                  content = 'fetch more..'\n                }\n              }\n              return (\n                <div key={index} className=\"mt1 dib\">\n                  <CustomButton\n                    icon={false}\n                    popupContent={'Fetch places of this category'}\n                    content={content}\n                    name={herePlaces[key].name}\n                    handler={this.handleClick}\n                    color={herePlaces[key].color}\n                    disabled={\n                      places[herePlaces[key].name]\n                        ? places[herePlaces[key].name].disabled\n                        : false\n                    }\n                    loading={\n                      places[herePlaces[key].name]\n                        ? places[herePlaces[key].name].isFetching\n                        : false\n                    }\n                    size=\"tiny\"\n                  />\n                </div>\n              )\n            })}\n            <div className=\"mt2\">\n              <CustomButton\n                icon={'remove'}\n                size={'tiny'}\n                popupContent={'Reset places and map'}\n                handler={this.handleClickClear}\n                disabled={this.areButtonsDisabled(places)}\n              />\n            </div>\n          </div>\n        </Segment>\n        <SemanticToastContainer position=\"bottom-center\" />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { places, dbscanSettings, boundingbox, message } = state.placesControls\n  return {\n    places,\n    boundingbox,\n    dbscanSettings,\n    message\n  }\n}\n\nexport default connect(mapStateToProps)(Control)\n","import React from 'react'\nimport Map from './Map/Map'\nimport Controls from './Controls/Control'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Map />\n        <Controls />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport reducer from './reducers'\nimport App from './App'\nimport './index.css' // postCSS import of CSS module\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nrender(\n  <Provider store={store}>\n    {' '}\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}